para la parte 3 tener en cuenta que se hara un cambio de contexto real, por lo que habra que guardar el PC, registros, etc.

Guardar la parte 2 antes de empezar con la 3.

Para la entrega, si no se consigue que funcione, entregar hasta donde hayas conseguido que funcione todo, y a parte entregar hasta donde hayas desarrollado aunque no funcione.



Sincronización y Consistencia: Dado que ambas tareas (processGenerator y Scheduler) pueden funcionar de forma concurrente, 
se recomienda utilizar mecanismos de sincronización (mutex y variables de condición) para asegurar que el acceso a la cola de procesos 
(u otros recursos compartidos) sea seguro. Esto evitará condiciones de carrera, de modo que el proceso que se agregue en medio de una 
revisión no cause inconsistencias.


Funciones tipo callback:
https://www.unrepo.com/c/function-pointers-and-callbacks-in-c-tutorial


  //puedes asignar un timer a cada parte del sistema, para que cada uno tenga un frecuencia de activacion distinta
  //por ejemplo, el primer timer para activar el scheduler y el segundo para activar el processGenerator
  //tendrias que alterar de alguna forma la funcion my_timer para que reciba que funcion debe ejecutar




  //para crear hilo con p-thread:
  //int pthread_create(thread_id, thread_attr, start_routine, parameter)








